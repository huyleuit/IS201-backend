CREATE TABLE "Role" (
    role_id INTEGER PRIMARY KEY,
    role_name VARCHAR(50) NOT NULL UNIQUE,
    role_description VARCHAR(255) NOT NULL,
    account_read NUMBER(1) NOT NULL CHECK (account_read IN (0, 1)),
    account_write NUMBER(1) NOT NULL CHECK (account_write IN (0, 1)),
    account_token_read NUMBER(1) NOT NULL CHECK (account_token_read IN (0, 1)),
    account_token_write NUMBER(1) NOT NULL CHECK (account_token_write IN (0, 1)),
    employee_read NUMBER(1) NOT NULL CHECK (employee_read IN (0, 1)),
    employee_write NUMBER(1) NOT NULL CHECK (employee_write IN (0, 1)),
    category_read NUMBER(1) NOT NULL CHECK (category_read IN (0, 1)),
    category_write NUMBER(1) NOT NULL CHECK (category_write IN (0, 1)),
    goods_read NUMBER(1) NOT NULL CHECK (goods_read IN (0, 1)),
    goods_write NUMBER(1) NOT NULL CHECK (goods_write IN (0, 1)),
    shipment_read NUMBER(1) NOT NULL CHECK (shipment_read IN (0, 1)),
    shipment_write NUMBER(1) NOT NULL CHECK (shipment_write IN (0, 1)),
    membership_card_read NUMBER(1) NOT NULL CHECK (membership_card_read IN (0, 1)),
    membership_card_write NUMBER(1) NOT NULL CHECK (membership_card_write IN (0, 1)),
    promotion_read NUMBER(1) NOT NULL CHECK (promotion_read IN (0, 1)),
    promotion_write NUMBER(1) NOT NULL CHECK (promotion_write IN (0, 1)),
    bill_read NUMBER(1) NOT NULL CHECK (bill_read IN (0, 1)),
    bill_write NUMBER(1) NOT NULL CHECK (bill_write IN (0, 1)),
    payment_read NUMBER(1) NOT NULL CHECK (payment_read IN (0, 1)),
    payment_write NUMBER(1) NOT NULL CHECK (payment_write IN (0, 1)),
    bill_details_read NUMBER(1) NOT NULL CHECK (bill_details_read IN (0, 1)),
    bill_details_write NUMBER(1) NOT NULL CHECK (bill_details_write IN (0, 1)),
    import_note_read NUMBER(1) NOT NULL CHECK (import_note_read IN (0, 1)),
    import_note_write NUMBER(1) NOT NULL CHECK (import_note_write IN (0, 1)),
    export_note_read NUMBER(1) NOT NULL CHECK (export_note_read IN (0, 1)),
    export_note_write NUMBER(1) NOT NULL CHECK (export_note_write IN (0, 1))
);
/

CREATE TABLE "Employee" (
	emp_id INTEGER generated by default as identity PRIMARY KEY NOT NULL,
	username VARCHAR2(255 CHAR) unique not null,
	emp_name VARCHAR2(255 CHAR) NOT NULL,
	role_id integer not null,
	gender VARCHAR2(10 CHAR) NOT NULL CHECK (gender in('Nam', 'Ná»¯', 'Khac')),
	address VARCHAR2(255 CHAR) NOT NULL,
	phone VARCHAR2(20 CHAR) NOT NULL,
	salary FLOAT(10),
	kpi INTEGER,
	create_date DATE NOT NULL,
	create_by VARCHAR2(50 CHAR) NOT NULL,
	last_modified_date DATE NOT NULL,
	last_modified_by VARCHAR2(50 CHAR) NOT NULL,
    foreign key (role_id) references "Role"(role_id)
);

CREATE TABLE "Account" (
    username VARCHAR2(255 CHAR) ,
    password VARCHAR2(255 CHAR) NULL,
    emp_id integer null ,
    role_id integer,
    status VARCHAR2(50 CHAR) NOT NULL CHECK (status in ('Active', 'Inactive', 'expired','pw_not_set')),
	salt VARCHAR2(50 CHAR) NULL,
	create_date DATE NOT NULL,
	create_by VARCHAR2(50 CHAR) NOT NULL,
	last_modified_date DATE NOT NULL,
	last_modified_by VARCHAR2(50 CHAR) NOT NULL,
    PRIMARY KEY (username),
    foreign key (emp_id) references "Employee"(emp_id),
    foreign key (role_id) references "Role"(role_id)
);
/
CREATE TABLE "AccountToken" (
	no INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
	username VARCHAR2(50 CHAR),
	token VARCHAR2(255 CHAR) NOT NULL,
	expire DATE NOT NULL,
	create_date DATE NOT NULL,
	create_by VARCHAR2(50 CHAR) NOT NULL,
	last_modified_date DATE NOT NULL,
	last_modified_by VARCHAR2(50 CHAR) NOT NULL,
	PRIMARY KEY (no),
	FOREIGN KEY(username) REFERENCES "Account" (username) ON DELETE CASCADE
);
/


CREATE TABLE "Category" (
    category_id Integer generated by default as identity primary key not null,
    category_name varchar2(255) unique not null,
    description varchar2(255) null,
    create_by VARCHAR2(20) not null,
    last_modified_by VARCHAR2(20) not null ,
    create_date DATE NOT NULL,
    last_modified_date DATE NOT NULL
);
/

CREATE TABLE "Goods" (
    goods_id INT generated by default as identity PRIMARY KEY NOT NULL,
    goods_name VARCHAR(255) NOT NULL UNIQUE,
    category_id integer null ,
    create_by VARCHAR2(20) NOT NULL,
    last_modified_by VARCHAR2(20) NOT NULL,
    create_date DATE NOT NULL,
    last_modified_date DATE NOT NULL,
    FOREIGN KEY (category_id) REFERENCES "Category"(category_id)
);
/

create table "Shipment" (
    shipment_id INT generated as identity PRIMARY KEY NOT NULL,
    shipment_name VARCHAR(255) NOT NULL UNIQUE,
    manufacture_date DATE NOT NULL,
    expiration_date DATE,
    quantity int not null,
    good_id integer not null,
    price FLOAT(10) NOT NULL,
    create_by VARCHAR2(20) NOT NULL,
    last_modified_by VARCHAR2(20) NOT NULL,
    create_date DATE NOT NULL,
    last_modified_date DATE NOT NULL,
    foreign key (good_id) references "Goods" (goods_id)
);
/

CREATE TABLE "MembershipCard" (
card_id INT generated by default as identity PRIMARY KEY NOT NULL,
member_name VARCHAR(255) NOT NULL,
date_of_birth DATE NOT NULL,
phone VARCHAR(20) NOT NULL,
email VARCHAR(255),
card_point INT NOT NULL,
card_rank VARCHAR(50) NOT NULL,
start_date DATE NOT NULL,
end_date DATE NOT NULL,
status VARCHAR(50) NOT NULL,
emp_id INT NOT NULL,
FOREIGN KEY (emp_id) REFERENCES "Employee" (emp_id),
constraint status_check check (status in ('Active', 'Inactive', 'expired'))
);

/
CREATE TABLE "Promotion" (
    pro_id INT generated by default as identity PRIMARY KEY NOT NULL,
    pro_name VARCHAR(255) NOT NULL,
    discount float(10) NOT NULL,
    content VARCHAR(255) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    create_date DATE NOT NULL,
    create_by VARCHAR2(20) NOT NULL,
    last_modified_date DATE NOT NULL,
    last_modified_by VARCHAR2(20) NOT NULL
);

/
CREATE TABLE "Bill" (
bill_id INT generated by default as identity PRIMARY KEY NOT NULL,
emp_id INT NOT NULL,
FOREIGN KEY (emp_id) REFERENCES "Employee" (emp_id),
last_modified_date DATE NOT NULL,
last_modified_by VARCHAR(20) NOT NULL,
create_date DATE NOT NULL,
create_by VARCHAR(20) NOT NULL
);

create table "Payment" (
    payment_id INT generated by default as identity PRIMARY KEY NOT NULL,
    pro_id integer,
    card_id INT,
    bill_id integer unique not null,
    payment_status VARCHAR(50) NOT NULL,
    payment_method VARCHAR(50),
    total FLOAT(10) NOT NULL,
    discounts FLOAT(10),
    actual_payment FLOAT(10),
    received FLOAT(10),
    change FLOAT(10),
    payment_date Date,
    last_modified_date DATE NOT NULL,
    last_modified_by VARCHAR(20) NOT NULL,
    create_date DATE NOT NULL,
    create_by VARCHAR(20) NOT NULL,
    FOREIGN KEY (card_id) REFERENCES "MembershipCard"(card_id),
    FOREIGN KEY (bill_id) REFERENCES "Bill"(bill_id),
    foreign key (pro_id) references "Promotion"(pro_id),
    constraint payment_status_check check (payment_status in ('Success', 'Processing', 'Failed'))
);
/

CREATE TABLE "BillDetails" (
    goods_id INT ,
    SHIPMENT_ID INT ,
    bill_id INT NOT NULL,
    unit_price FLOAT(10),
    quantity INT ,
    total FLOAT(10),
    PRIMARY KEY (goods_id, bill_id),
    FOREIGN KEY (goods_id) REFERENCES "Goods"(goods_id),
    FOREIGN KEY (bill_id) REFERENCES "Bill"(bill_id),
    FOREIGN KEY (shipment_id) REFERENCES "Shipment"(shipment_id)
);

/
CREATE TABLE "ImportNote" (
    import_id INT generated by default as identity PRIMARY KEY NOT NULL,
    import_date DATE NOT NULL,
    quantity INT NOT NULL,
    price FLOAT(10) NOT NULL,
    goods_id INT NOT NULL,
    shipment_id INT NOT NULL,
    create_date DATE NOT NULL,
    create_by VARCHAR(20) NOT NULL,
    last_modified_date DATE NOT NULL,
    last_modified_by VARCHAR(20) NOT NULL,
    FOREIGN KEY (goods_id) REFERENCES "Goods"(goods_id),
    FOREIGN KEY (shipment_id) REFERENCES "Shipment"(shipment_id)
)
/

CREATE TABLE "ExportNote" (
    export_id INT generated by default as identity PRIMARY KEY NOT NULL,
    export_date DATE NOT NULL,
    create_date DATE NOT NULL,
    create_by VARCHAR(20) NOT NULL,
    last_modified_date DATE NOT NULL,
    last_modified_by VARCHAR(20) NOT NULL,
    quantity INT NOT NULL,
    price FLOAT(10) NOT NULL,
    goods_id INT NOT NULL,
    shipment_id INT NOT NULL,
FOREIGN KEY (goods_id) REFERENCES "Goods"(goods_id),
FOREIGN KEY (shipment_id) REFERENCES "Shipment"(shipment_id)
)
/

create or replace trigger EMPLOYEE_AUTO_INSERT_DATE
    before insert
    on "Employee"
    for each row
BEGIN
    :NEW."CREATE_BY" := USER;
    :NEW."CREATE_DATE" := SYSDATE;
    :NEW."LAST_MODIFIED_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
END;
/
create or replace trigger EMPLOYEE_AUTO_UPDATE_DATE
    before update of "LAST_MODIFIED_BY", "LAST_MODIFIED_DATE"
    on "Employee"
    for each row
BEGIN
    :NEW."LAST_MODIFIED_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
END;
/



CREATE OR REPLACE TRIGGER account_auto_insert_date
BEFORE INSERT ON "Account"
FOR EACH ROW
BEGIN
    :NEW."CREATE_DATE" := SYSDATE;
    :NEW."CREATE_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
    :NEW."LAST_MODIFIED_BY" := USER;
END ;
/
CREATE OR REPLACE TRIGGER account_token_auto_insert_date
BEFORE INSERT ON "AccountToken"
    FOR EACH ROW
BEGIN
    :NEW."EXPIRE" := SYSDATE + 1;
     :NEW."CREATE_DATE" := SYSDATE;
    :NEW."CREATE_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
    :NEW."LAST_MODIFIED_BY" := USER;
END;
/

CREATE OR REPLACE TRIGGER GOODS_AUTO_INSERT_DATE
    BEFORE INSERT ON "Goods"
    FOR EACH ROW
   BEGIN
    :NEW."CREATE_BY" := USER;
    :NEW."CREATE_DATE" := SYSDATE;
    :NEW."LAST_MODIFIED_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
END;
create or replace trigger GOODS_AUTO_UPDATE_DATE
    before update of "LAST_MODIFIED_BY", "LAST_MODIFIED_DATE"
    on "Goods"
    for each row
BEGIN
    :NEW."LAST_MODIFIED_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
END;
/

CREATE OR REPLACE TRIGGER CATEGORY_AUTO_INSERT_DATE
    BEFORE INSERT ON "Category"
    FOR EACH ROW
   BEGIN
    :NEW."CREATE_BY" := USER;
    :NEW."CREATE_DATE" := SYSDATE;
    :NEW."LAST_MODIFIED_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
END;
CREATE OR REPLACE TRIGGER CATEGORY_AUTO_UPDATE_DATE
    BEFORE UPDATE OF "LAST_MODIFIED_BY", "LAST_MODIFIED_DATE"
    ON "Category"
    FOR EACH ROW
BEGIN
    :NEW."LAST_MODIFIED_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
END;

/

CREATE OR REPLACE TRIGGER PROMOTION_AUTO_INSERT_DATE
    BEFORE INSERT ON "Promotion"
    FOR EACH ROW
   BEGIN
    :NEW."CREATE_BY" := USER;
    :NEW."CREATE_DATE" := SYSDATE;
    :NEW."LAST_MODIFIED_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
END;
CREATE OR REPLACE TRIGGER PROMOTION_AUTO_UPDATE_DATE
    BEFORE UPDATE OF "LAST_MODIFIED_BY", "LAST_MODIFIED_DATE"
    ON "Promotion"
    FOR EACH ROW
BEGIN
    :NEW."LAST_MODIFIED_BY" := USER;
    :NEW."LAST_MODIFIED_DATE" := SYSDATE;
END;
/
CREATE OR REPLACE TRIGGER trg_bill_insert
    BEFORE INSERT ON "Bill"
    FOR EACH ROW
    BEGIN
        :NEW."CREATE_BY" := USER;
        :NEW."LAST_MODIFIED_BY" := USER;
        :NEW."CREATE_DATE" := SYSDATE;
        :NEW."LAST_MODIFIED_DATE" := SYSDATE;
    end;
/
create or replace trigger trg_bill_update
    before update on "Bill"
    for each row
    begin
        :new."LAST_MODIFIED_DATE" := sysdate;
        :new."LAST_MODIFIED_BY" := user;
    end;
/
create or replace trigger trg_bill_delete
    before delete on "Bill"
    for each row
    begin
        delete from "Payment" where bill_id = :old.bill_id;
        delete from "BillDetails" where bill_id = :old.bill_id;
    end;




CREATE OR REPLACE TRIGGER trg_insert_account
AFTER INSERT ON "Employee"
FOR EACH ROW
BEGIN
    INSERT INTO "Account" (USERNAME,emp_id,ROLE_ID, STATUS, create_date, create_by, last_modified_date, last_modified_by)
    VALUES (:new.username, :new.emp_id, :new.role_id,'pw_not_set', SYSDATE, 'trg_insert_account', SYSDATE, 'trg_insert_account');
END;
create or replace trigger trg_update_account
AFTER UPDATE ON "Employee"
FOR EACH ROW
BEGIN
    UPDATE "Account" SET USERNAME = :new.username, ROLE_ID = :new.role_id, last_modified_date = SYSDATE, last_modified_by = 'trg_update_account' WHERE emp_id = :new.emp_id;
END;

/
create or replace trigger trg_delete_account
AFTER DELETE ON "Employee"
FOR EACH ROW
BEGIN
    DELETE FROM "Account" WHERE emp_id = :old.emp_id;
END;

/
CREATE OR REPLACE TRIGGER trg_insert_import_note
    BEFORE INSERT ON "ImportNote"
    FOR EACH ROW
    BEGIN
        :NEW."CREATE_BY" := USER;
        :NEW."LAST_MODIFIED_BY" := USER;
        :NEW."CREATE_DATE" := SYSDATE;
        :NEW."LAST_MODIFIED_DATE" := SYSDATE;
    end;
/
create or replace trigger trg_update_import_note
    before update on "ImportNote"
    for each row
    begin
        :new."LAST_MODIFIED_DATE" := sysdate;
        :new."LAST_MODIFIED_BY" := user;
    end;

CREATE OR REPLACE TRIGGER trg_insert_shipment
    BEFORE INSERT ON "Shipment"
    FOR EACH ROW
    BEGIN
        :NEW."CREATE_BY" := USER;
        :NEW."LAST_MODIFIED_BY" := USER;
        :NEW."CREATE_DATE" := SYSDATE;
        :NEW."LAST_MODIFIED_DATE" := SYSDATE;
    end;
/
create or replace trigger trg_update_shipment
    before update on "Shipment"
    for each row
    begin
        :new."LAST_MODIFIED_DATE" := sysdate;
        :new."LAST_MODIFIED_BY" := user;
    end;

/

--Trigger
--1. Viáº¿t trigger táº¡o Payment khi cÃ³ hÃ³a ÄÆ¡n má»i
CREATE OR REPLACE TRIGGER trg_create_payment
AFTER INSERT ON "Bill"
FOR EACH ROW
BEGIN
  INSERT INTO "Payment" (bill_id, payment_status, total, last_modified_date, last_modified_by, create_date, create_by)
  VALUES (:NEW.bill_id, 'Processing', 0, sysdate, 'admin', sysdate, 'admin');
END;

--2. Viáº¿t trigger cáº­p nháº­t tá»ng tiá»n cá»§a Payment khi cÃ³ thay Äá»i vá» hÃ³a ÄÆ¡n
CREATE OR REPLACE TRIGGER trg_bill_detail_add
before INSERT ON "BillDetails"
FOR EACH ROW
BEGIN
   update "Payment"
    set "Payment".total = "Payment".TOTAL + :NEW.total
    where bill_id = :NEW.bill_id;

   update "Shipment"
    set "Shipment".quantity = "Shipment".quantity - :NEW.quantity
    where good_id = :NEW.goods_id and shipment_id = :NEW.shipment_id;
END;

create or replace trigger trg_bill_detail_delete
    before delete on "BillDetails"
    for each row
begin
    update "Payment"
    set "Payment".total = "Payment".TOTAL - :OLD.total
    where bill_id = :OLD.bill_id;
    update "Shipment"
    set "Shipment".quantity = "Shipment".quantity + :OLD.quantity
    where good_id = :OLD.goods_id and shipment_id = :OLD.shipment_id;
end;




--3. Viáº¿t trigger cáº­p nháº­t Äiá»m thÃ nh viÃªn, sá» hÃ ng sau khi hoÃ n táº¥t thanh toÃ¡n
CREATE OR REPLACE TRIGGER update_membership_card_point
AFTER UPDATE OF PAYMENT_STATUS ON "Payment"
FOR EACH ROW
BEGIN
	IF :NEW.payment_status = 'Success' THEN
		IF :NEW.card_id IS NOT NULL THEN
  		UPDATE "MembershipCard"
  		SET card_point = card_point + floor(:NEW.total/1000000)
  		WHERE card_id = :NEW.card_id;
		END IF;

		UPDATE "Shipment"
  		SET quantity = quantity - (SELECT quantity FROM "BillDetails" WHERE bill_id = :NEW.bill_id)
  		WHERE shipment_id = (SELECT shipment_id FROM "BillDetails" WHERE bill_id = :NEW.bill_id);
	END IF;
END;


--4. Viáº¿t trigger cáº­p nháº­t kpi nhÃ¢n viÃªn khi ÄÄng kÃ­ tháº» thÃ nh viÃªn má»i
CREATE OR REPLACE TRIGGER update_employee_kpi
AFTER INSERT ON "MembershipCard"
FOR EACH ROW
BEGIN
  UPDATE  "Employee"
  SET kpi = kpi + 1
  WHERE emp_id = :NEW.emp_id;
END;

--Procedure
--3. Procedure cáº­p nháº­t hÃ ng hÃ³a khi nháº­p hÃ ng, thÃªm trÆ°á»ng há»£p náº¿u lÃ´ hÃ ng ÄÃ³ má»i, cáº­p nháº­t báº£ng goods shipment nhÆ° tháº¿ nÃ o
CREATE OR REPLACE PROCEDURE import_goods (
    p_goods_id INT,
    p_shipment_id INT,
    p_quantity INT
)
AS
BEGIN
  IF NOT EXISTS (SELECT * FROM "Shipment" WHERE good_id = p_goods_id AND shipment_id = p_shipment_id) THEN
    INSERT INTO "Shipment" (good_id, shipment_id, quantity, price, create_date, create_by)
    VALUES (p_goods_id, p_shipment_id, p_quantity, 0, sysdate, 'admin');
  ELSE
    UPDATE "Shipment"
    SET quantity = quantity + p_quantity
    WHERE good_id = p_goods_id AND shipment_id = p_shipment_id;
  END IF;
END;

-- SELECT * FROM user_errors;


--4. Procedure cáº­p nháº­t hÃ ng hÃ³a khi xuáº¥t hÃ ng
CREATE OR REPLACE PROCEDURE export_goods (
	p_goods_id INT,
	p_shipment_id INT,
	p_quantity INT
)
AS
BEGIN
  UPDATE "Shipment"
  SET quantity = quantity - p_quantity
  WHERE good_id = p_goods_id AND shipment_id = p_shipment_id;
END;
/
INSERT INTO C##IS210."Role" (ROLE_ID, ROLE_NAME, ROLE_DESCRIPTION, ACCOUNT_READ, ACCOUNT_WRITE, ACCOUNT_TOKEN_READ, ACCOUNT_TOKEN_WRITE, EMPLOYEE_READ, EMPLOYEE_WRITE, CATEGORY_READ, CATEGORY_WRITE, GOODS_READ, GOODS_WRITE, SHIPMENT_READ, SHIPMENT_WRITE, MEMBERSHIP_CARD_READ, MEMBERSHIP_CARD_WRITE, PROMOTION_READ, PROMOTION_WRITE, BILL_READ, BILL_WRITE, PAYMENT_READ, PAYMENT_WRITE, BILL_DETAILS_READ, BILL_DETAILS_WRITE, IMPORT_NOTE_READ, IMPORT_NOTE_WRITE, EXPORT_NOTE_READ, EXPORT_NOTE_WRITE) VALUES (1, 'Admin', 'Administrator', 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
INSERT INTO C##IS210."Role" (ROLE_ID, ROLE_NAME, ROLE_DESCRIPTION, ACCOUNT_READ, ACCOUNT_WRITE, ACCOUNT_TOKEN_READ, ACCOUNT_TOKEN_WRITE, EMPLOYEE_READ, EMPLOYEE_WRITE, CATEGORY_READ, CATEGORY_WRITE, GOODS_READ, GOODS_WRITE, SHIPMENT_READ, SHIPMENT_WRITE, MEMBERSHIP_CARD_READ, MEMBERSHIP_CARD_WRITE, PROMOTION_READ, PROMOTION_WRITE, BILL_READ, BILL_WRITE, PAYMENT_READ, PAYMENT_WRITE, BILL_DETAILS_READ, BILL_DETAILS_WRITE, IMPORT_NOTE_READ, IMPORT_NOTE_WRITE, EXPORT_NOTE_READ, EXPORT_NOTE_WRITE) VALUES (2, 'Cashier', 'Cashier Employee', 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0);
INSERT INTO C##IS210."Role" (ROLE_ID, ROLE_NAME, ROLE_DESCRIPTION, ACCOUNT_READ, ACCOUNT_WRITE, ACCOUNT_TOKEN_READ, ACCOUNT_TOKEN_WRITE, EMPLOYEE_READ, EMPLOYEE_WRITE, CATEGORY_READ, CATEGORY_WRITE, GOODS_READ, GOODS_WRITE, SHIPMENT_READ, SHIPMENT_WRITE, MEMBERSHIP_CARD_READ, MEMBERSHIP_CARD_WRITE, PROMOTION_READ, PROMOTION_WRITE, BILL_READ, BILL_WRITE, PAYMENT_READ, PAYMENT_WRITE, BILL_DETAILS_READ, BILL_DETAILS_WRITE, IMPORT_NOTE_READ, IMPORT_NOTE_WRITE, EXPORT_NOTE_READ, EXPORT_NOTE_WRITE) VALUES (3, 'Inventory Clerk', 'Inventory Clerk', 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1);

INSERT INTO C##IS210."Account" (USERNAME,ROLE_ID, PASSWORD, SALT,STATUS, CREATE_DATE, CREATE_BY, LAST_MODIFIED_DATE, LAST_MODIFIED_BY) VALUES ('admin',1, 'JDJiJDEyJGJPRXRvRUg4VS85MExvbmNTYlBwRS5tMFIuQS9KY0VKMWRGMC5zMTNmd1ZrLkprcDM4S0Yu', 'JDJiJDEyJGJPRXRvRUg4VS85MExvbmNTYlBwRS4=','Active',TIMESTAMP '2024-05-21 07:42:07', 'C##IS210', TIMESTAMP '2024-05-21 07:42:07', 'C##IS210');

INSERT INTO "Employee" (USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvbh1', 'Nguyá»n VÄn Báº£o',2, 'Nam', 'Quáº­n 7, TP HCM', '0987654321', 10000000, 100, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name, ROLE_ID,gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvbh2', 'Äinh HoÃ ng Nam',2, 'Nam', 'Quáº­n 10, TP HCM', '0986789142', 10000000, 87, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvbh3', 'LÃª Thá» HoÃ i',2, 'Ná»¯', 'Quáº­n Thá»§ Äá»©c, TP HCM', '0987326741', 10000000, 92, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvbh4', 'Tráº§n VÄn Quang', 2,'Nam', 'Quáº­n BÃ¬nh Tháº¡nh, TP HCM', '0987123456', 9000000, 85, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name, ROLE_ID,gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvbh5', 'Pháº¡m Thá» Mai', 2,'Ná»¯', 'Quáº­n TÃ¢n PhÃº, TP HCM', '0987234567', 9000000, 88, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvbh6', 'Nguyá»n Minh Tuáº¥n',2, 'Nam', 'Quáº­n GÃ² Váº¥p, TP HCM', '0987345678', 9000000, 90, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvtv1', 'LÃª VÄn TÃ¢m', 2,'Nam', 'Quáº­n 1, TP HCM', '0987456789', 9000000, 86, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvtv2', 'Tráº§n Thá» HÆ°Æ¡ng', 2,'Ná»¯', 'Quáº­n 3, TP HCM', '0987567890', 9000000, 91, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name, ROLE_ID,GENDER, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvtv3', 'HoÃ ng VÄn Äá»©c', 3,'Nam', 'Quáº­n 5, TP HCM', '0987678901', 9000000, 89, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name, ROLE_ID,GENDER, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvtv4', 'Nguyá»n Thá» HÃ ', 3,'Ná»¯', 'Quáº­n 8, TP HCM', '0987789012', 9000000, 87, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name, ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvxh1', 'Phan VÄn Äáº¡i',3, 'Nam', 'Quáº­n 2, TP HCM', '0987890123', 9000000, 92, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name, ROLE_ID,gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvxh2', 'TrÆ°Æ¡ng Thá» Ngá»c',3, 'Ná»¯', 'Quáº­n 4, TP HCM', '0987901234', 9000000, 88, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvxh3', 'VÃµ VÄn Anh',3, 'Nam', 'Quáº­n 9, TP HCM', '0987012345', 9000000, 90, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvxh4', 'Tráº§n Minh Háº£i',3, 'Nam', 'DÄ© An, BÃ¬nh DÆ°Æ¡ng', '0167876243', 9000000, 91, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('nvxh5', 'LÃª Nháº­t Nam',3, 'Nam', 'DÄ© An, BÃ¬nh DÆ°Æ¡ng', '0516876245', 9000000, 87, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name, ROLE_ID,gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('admin1', 'Tráº§n Trá»ng Äáº¡i',3, 'Nam', 'Quáº­n Thá»§ Äá»©c, TP HCM', '0893765156', 20000000, 97, SYSDATE, 'admin1', SYSDATE, 'admin1');

INSERT INTO "Employee" ( USERNAME, emp_name,ROLE_ID, gender, address, phone, salary, kpi, create_date, create_by, last_modified_date, last_modified_by)
VALUES ('admin2', 'LÃª Kháº£ NhÆ°',3, 'Ná»¯', 'Quáº­n Thá»§ Äá»©c, TP HCM', '0819098112', 20000000, 96, SYSDATE, 'admin1', SYSDATE, 'admin1');
/












insert into "Category" (category_name, description, create_by, last_modified_by, create_date, last_modified_date) values ('Trá»©ng', 'Tá»ng há»£p cÃ¡c thá» loáº¡i trá»©ng gia sÃºc gia cáº§m.', 'admin', 'admin', sysdate, sysdate);
insert into "Category" (category_name, description, create_by, last_modified_by, create_date, last_modified_date) values ('Gáº¡o', 'Tá»ng há»£p cÃ¡c thá» loáº¡i gáº¡o.', 'admin', 'admin', sysdate, sysdate);
insert into "Category" (category_name, description, create_by, last_modified_by, create_date, last_modified_date) values ('Rau cá»§', 'Tá»ng há»£p cÃ¡c loáº¡i rau cá»§.', 'admin', 'admin', sysdate, sysdate);
insert into "Category" (category_name, description, create_by, last_modified_by, create_date, last_modified_date) values ('Thá»t', 'Tá»ng há»£p cÃ¡c loáº¡i thá»t.', 'admin', 'admin', sysdate, sysdate);
insert into "Category" (category_name, description, create_by, last_modified_by, create_date, last_modified_date) values ('Háº£i sáº£n', 'Tá»ng há»£p cÃ¡c loáº¡i háº£i sáº£n.', 'admin', 'admin', sysdate, sysdate);

insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('Trá»©ng gÃ ', 1, 'admin', 'admin', sysdate, sysdate);
insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('Trá»©ng vá»t', 1, 'admin', 'admin', sysdate, sysdate);
insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('Gáº¡o táº»', 2, 'admin', 'admin', sysdate, sysdate);
insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('Gáº¡o náº¿p', 2, 'admin', 'admin', sysdate, sysdate);
insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('Rau cáº£i', 3, 'admin', 'admin', sysdate, sysdate);
insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('Rau muá»ng', 3, 'admin', 'admin', sysdate, sysdate);
insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('Thá»t bÃ²', 4, 'admin', 'admin', sysdate, sysdate);
insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('Thá»t heo', 4, 'admin', 'admin', sysdate, sysdate);
insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('CÃ¡ há»i', 5, 'admin', 'admin', sysdate, sysdate);
insert into "Goods" (goods_name, category_id, create_by, last_modified_by, create_date, last_modified_date) values ('CÃ¡ ngá»«', 5, 'admin', 'admin', sysdate, sysdate);

insert into "Shipment" (shipment_name, manufacture_date, expiration_date, quantity, good_id, price, create_by, last_modified_by, create_date, last_modified_date) values ('LÃ´ hÃ ng Z', sysdate, sysdate, 100, 1, 5000, 'admin', 'admin', sysdate, sysdate);
insert into "Shipment" (shipment_name, manufacture_date, expiration_date, quantity, good_id, price, create_by, last_modified_by, create_date, last_modified_date) values ('LÃ´ hÃ ng B', sysdate, sysdate, 100, 2, 7000, 'admin', 'admin', sysdate, sysdate);
insert into "Shipment" (shipment_name, manufacture_date, expiration_date, quantity, good_id, price, create_by, last_modified_by, create_date, last_modified_date) values ('LÃ´ hÃ ng C', sysdate, sysdate, 100, 3, 12000, 'admin', 'admin', sysdate, sysdate);
insert into "Shipment" (shipment_name, manufacture_date, expiration_date, quantity, good_id, price, create_by, last_modified_by, create_date, last_modified_date) values ('LÃ´ hÃ ng D', sysdate, sysdate, 100, 4, 15000, 'admin', 'admin', sysdate, sysdate);
insert into "Shipment" (shipment_name, manufacture_date, expiration_date, quantity, good_id, price, create_by, last_modified_by, create_date, last_modified_date) values ('LÃ´ hÃ ng E', sysdate, sysdate, 100, 5, 30000, 'admin', 'admin', sysdate, sysdate);




insert into "Promotion" (pro_name, content, DISCOUNT, start_date, end_date, create_date, create_by, last_modified_date, last_modified_by) values ('Khuyáº¿n mÃ£i 1', 'Giáº£m giÃ¡ 10%', '0.1', sysdate, sysdate, sysdate, 'admin', sysdate, 'admin');
insert into "Promotion" (pro_name, content, DISCOUNT, start_date, end_date, create_date, create_by, last_modified_date, last_modified_by) values ('Khuyáº¿n mÃ£i 2', 'Giáº£m giÃ¡ 20%', '0.1', sysdate, sysdate, sysdate, 'admin', sysdate, 'admin');


/*táº¡o hÃ³a ÄÆ¡n*/
INSERT INTO "Bill" (emp_id, last_modified_date, last_modified_by, create_date, create_by) VALUES (1, sysdate, 'admin', sysdate, 'admin');
INSERT INTO "BillDetails" (goods_id, bill_id, shipment_id, quantity) VALUES (1, 1, 1, 10);
INSERT INTO "BillDetails" (goods_id, bill_id, shipment_id, quantity) VALUES (2, 1, 3, 5);

INSERT INTO "Bill" (emp_id, last_modified_date, last_modified_by, create_date, create_by) VALUES (1, sysdate, 'admin', sysdate, 'admin');
INSERT INTO "BillDetails" (goods_id, bill_id, shipment_id, quantity) VALUES (1, 2, 2, 10);
INSERT INTO "BillDetails" (goods_id, bill_id, shipment_id, quantity) VALUES (2, 2, 3, 5);
INSERT INTO "BillDetails" (goods_id, bill_id, shipment_id, quantity) VALUES (3, 2, 4, 5);

INSERT INTO "Bill" (emp_id, last_modified_date, last_modified_by, create_date, create_by) VALUES (2, sysdate, 'admin', sysdate, 'admin');
INSERT INTO "BillDetails" (goods_id, bill_id, shipment_id, quantity) VALUES (1, 3, 2, 10);
INSERT INTO "BillDetails" (goods_id, bill_id, shipment_id, quantity) VALUES (2, 3, 3, 5);

INSERT INTO "MembershipCard" (emp_id, member_name, date_of_birth, phone, email, card_point, card_rank, start_date, end_date, status) VALUES (1, 'Nguyen Van C', sysdate, '0123456789', 'test@gmail.com', 0, 'Normal', sysdate, sysdate, 'Active');


